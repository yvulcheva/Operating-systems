Този документ служи за документация на домашно 1 по ОС.
# Йолина Вълчева
# Софтуерно инженерство

# first task
	За да се стартира програмата успешно е нужно  да се въведе като параметър, име на съществуващ файл, ако това не се направи, програмата ще изведе съобщение на потребителя и ще излезе с "exit" - 1. Файлът трябва да съдържа само url линкове или коментари започващи с #.

	След проверките за параметър, програмата започва да чете ред по ред файлa предоставен като параметър. Използва се командата curl -s, където -s "заглушава" статистиката която по принцип се извежда при изпълнението на curl. Програмата използва временни файлове направени чрез командата mktemp, които по-късно изтрива. 
	Като резултат програмата извежда ред по ред данните представени в линковете във формат: <дата>:<категория>:<място>:<име>:<националност>:<позивна>:<време>:<брой>:<старт номер>. 


# second task
	За да стартира програмата успешно е нужно да се въведат като параметри файл с данни във формат :
 <дата>:<категория>:<място>:<име>:<националност>:<позивна>:<време>:<брой>:<старт номер>, top_places или parts 
	- където top_places е случай, в които искаме да изведем името на всеки участник заел място, в дадена категория от 1 до m, като се изведат имената само на първите n. А за целта се въвеждат допълнително и параметри: категория, число -m, число -n. Резултатът се извежда под формата: 
<число - пъти заел място от 1 до m> <име> - сортирани в низходящ ред.

	-parts е случай, в които искаме да изведем категорията и датите, в които е участвал даден състезател. А за целта се въвежда и параметър - име на състезател. Резултатът се извежда под формата
<категория1> <датa1>, <датa2>...<датaN>
...
<категорияK> <датa1>, <датa2>...<датaT>

	При неспазване на изискванията, програмата ще изведе съобщение на потребителя и ще излезе с "exit" - 1.
	
# Външни източници:
https://linuxhint.com/for_loop_awk_command/
https://linuxize.com/post/curl-command-examples/
	
